{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './../../components/Footer';\nimport Languages from './../../components/Languages';\nimport FormRoterizador from './../../components/FormRoterizador';\nimport PreviewRoterizador from './../../components/PreviewRoterizador';\nimport { getLanguage } from './../../components/i18n';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withScriptjs } from 'react-google-maps';\nimport Map from './../../components/Map';\nimport { compose, withProps, lifecycle } from \"recompose\";\n\nclass Roteirizador extends Component {\n  constructor(props) {\n    super();\n    let texts = getLanguage('pt-br');\n    this.state = {\n      texts: texts,\n      route: []\n    };\n    this.updateMap = this.updateMap.bind(this);\n  }\n\n  async updateMap(route) {\n    this.setState({\n      route: route\n    });\n  }\n\n  async verifyRoute(route) {\n    let checked = true;\n\n    if (route.length < 1) {\n      console.log('-1');\n      return false;\n    }\n\n    for (let i in route) {\n      if (!(route[i].metadata && route[i].metadata.lat)) {\n        checked = false;\n      }\n    }\n\n    this.setState({\n      update: true\n    });\n    return checked;\n  }\n\n  render() {\n    let _this$state = this.state,\n        texts = _this$state.texts,\n        route = _this$state.route;\n    let verification = this.verifyRoute(route);\n    let MapLoader = verification === true ? withScriptjs(React.createElement(Map, {\n      route: route,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : null;\n    let page_texts = texts.page_home;\n    let self = this;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-container-form\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Roteirizador\"), React.createElement(Languages, {\n      languages_texts: texts.all_languages,\n      actual_language: texts.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(FormRoterizador, {\n      funcUpdateMap: this.updateMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(PreviewRoterizador, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      \"data-container-maps\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, verification === true ? React.createElement(MapLoader, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBadM1YaUkhSp7Kki0F-Dj382ZxW-8VZxw\",\n      loadingElement: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : \"\"), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Roteirizador;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/index.js"],"names":["React","Component","Fragment","Link","Footer","Languages","FormRoterizador","PreviewRoterizador","getLanguage","PerfectScrollbar","withScriptjs","Map","compose","withProps","lifecycle","Roteirizador","constructor","props","texts","state","route","updateMap","bind","setState","verifyRoute","checked","length","console","log","i","metadata","lat","update","render","verification","MapLoader","page_texts","page_home","self","all_languages","language"],"mappings":"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","sourcesContent":["import React,\r\n       { Component, Fragment }            from 'react';\r\nimport { Link }                 from 'react-router-dom';\r\nimport Footer                   from './../../components/Footer';\r\nimport Languages                from './../../components/Languages';\r\nimport FormRoterizador          from './../../components/FormRoterizador';\r\nimport PreviewRoterizador       from './../../components/PreviewRoterizador';\r\nimport { getLanguage }          from './../../components/i18n';\r\nimport PerfectScrollbar         from 'react-perfect-scrollbar';\r\nimport { withScriptjs }         from 'react-google-maps';\r\n\r\nimport Map from './../../components/Map';\r\n\r\nimport { compose, withProps, lifecycle } from \"recompose\";\r\n\r\nclass Roteirizador extends Component {\r\n\r\n  constructor( props )\r\n  {\r\n\r\n    super();\r\n\r\n    let texts = getLanguage('pt-br');\r\n\r\n    this.state = {\r\n      texts: texts,\r\n      route: []\r\n    }\r\n\r\n    this.updateMap    = this.updateMap.bind(this);\r\n\r\n  }\r\n\r\n  async updateMap( route )\r\n  {\r\n\r\n    this.setState({\r\n      route: route\r\n    })\r\n\r\n  }\r\n\r\n  async verifyRoute( route )\r\n  {\r\n\r\n    let checked = true;\r\n\r\n    if( route.length < 1 ){\r\n      console.log('-1')\r\n      return false;\r\n    }\r\n\r\n    for( let i in route ) {\r\n\r\n      if( !(route[i].metadata && route[i].metadata.lat) ){\r\n        checked = false;\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      update: true\r\n    })\r\n\r\n    return checked;\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let { texts,\r\n          route }  = this.state;\r\n\r\n    let verification = this.verifyRoute( route );\r\n\r\n    let MapLoader = verification === true\r\n                      ? withScriptjs(<Map\r\n                                    route={route} />)\r\n                      : null\r\n\r\n    let page_texts = texts.page_home;\r\n    let self = this;\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div data-container-form>\r\n\r\n          <PerfectScrollbar>\r\n\r\n            <h1>Roteirizador</h1>\r\n\r\n            <Languages\r\n              languages_texts={texts.all_languages}\r\n              actual_language={texts.language}/>\r\n\r\n            <FormRoterizador\r\n              funcUpdateMap={this.updateMap}/>\r\n\r\n            <PreviewRoterizador />\r\n\r\n          </PerfectScrollbar>\r\n\r\n        </div>\r\n\r\n        <div data-container-maps>\r\n{\r\n            verification === true\r\n            ? <MapLoader\r\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBadM1YaUkhSp7Kki0F-Dj382ZxW-8VZxw\"\r\n                loadingElement={<div />} />\r\n            : \"\"\r\n}\r\n        </div>\r\n\r\n        <Footer />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Roteirizador;\r\n"]},"metadata":{},"sourceType":"module"}