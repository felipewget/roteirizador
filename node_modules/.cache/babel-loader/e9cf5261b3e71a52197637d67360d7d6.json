{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/components/FormRoterizador/Fields.js\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass Fields extends Component {\n  constructor(props) {\n    super();\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      let self = this;\n      let _this$props = this.props,\n          funcUpdate = _this$props.funcUpdate,\n          index = _this$props.index;\n      self.setState({\n        address\n      });\n      geocodeByAddress(address).then(function (results) {\n        var types = null;\n        var formatted_address = '';\n\n        if (results[0].types) {\n          types = results[0].types;\n        }\n\n        if (results[0].formatted_address) {\n          formatted_address = results[0].formatted_address;\n        }\n\n        self.setState({\n          tags: types,\n          formated_address: formatted_address\n        });\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        self.setState({\n          lat: latLng.lat,\n          lng: latLng.lng\n        });\n        funcUpdate(self.state, index);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      address: null,\n      lat: null,\n      lng: null,\n      tags: null,\n      formated_address: null,\n      privacy: null\n    };\n  }\n\n  getLocationValue() {\n    var basic_data = this.props.basic_data;\n    return basic_data.actual_city.address;\n  }\n\n  processLabel() {\n    let _this$props2 = this.props,\n        type = _this$props2.type,\n        remove = _this$props2.remove,\n        texts = _this$props2.texts;\n\n    if (type === \"from\") {\n      return React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, texts.label_from.label);\n    } else {\n      return remove ? React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, texts.label_stop.label) : React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, texts.label_to.label);\n    }\n  }\n\n  getInput(placeholder) {\n    return React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: placeholder\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      \"data-list-location\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, loading && React.createElement(\"li\", {\n      \"data-loading-places\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Carregando...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item';\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"li\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"icon-location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, suggestion.formattedSuggestion.mainText), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, suggestion.formattedSuggestion.secondaryText));\n    }))));\n  }\n\n  processField() {\n    let _this$props3 = this.props,\n        index = _this$props3.index,\n        type = _this$props3.type,\n        remove = _this$props3.remove,\n        funcButton = _this$props3.funcButton,\n        texts = _this$props3.texts;\n    return type === \"to\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-pin_drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), this.getInput(remove ? texts.label_stop.placeholder : texts.label_to.placeholder)), remove ? React.createElement(\"button\", {\n      className: \"icon-close\",\n      type: \"button\",\n      onClick: () => {\n        funcButton(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }) : React.createElement(\"button\", {\n      className: \"icon-add\",\n      type: \"button\",\n      onClick: () => {\n        funcButton(this);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), this.getInput(texts.label_from.placeholder));\n  } //  funcUpdate\n\n\n  render() {\n    let type = this.props.type;\n    return React.createElement(\"div\", {\n      \"data-field\": type === \"to\" ? \"with-button\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.processLabel(), this.processField());\n  }\n\n}\n\nexport default Fields;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/components/FormRoterizador/Fields.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","Fields","constructor","props","handleChange","address","setState","handleSelect","self","funcUpdate","index","then","results","types","formatted_address","tags","formated_address","latLng","lat","lng","state","catch","error","console","log","privacy","getLocationValue","basic_data","actual_city","processLabel","type","remove","texts","label_from","label","label_stop","label_to","getInput","placeholder","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","className","active","style","backgroundColor","cursor","formattedSuggestion","mainText","secondaryText","processField","funcButton","render"],"mappings":";AAAA,OAAOA,KAAP,IACQC,SADR,QACyB,OADzB;AAGA,OAAOC,kBAAP,IAEQC,gBAFR,EAGQC,SAHR,QAIc,2BAJd;;AAMA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAE7BK,EAAAA,WAAW,CAAEC,KAAF,EACX;AAEE;;AAFF,SAeAC,YAfA,GAeeC,OAAO,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAjBF;;AAAA,SAmBDE,YAnBC,GAmBcF,OAAO,IAAI;AAEzB,UAAIG,IAAI,GAAG,IAAX;AAFyB,wBAGK,KAAKL,KAHV;AAAA,UAGjBM,UAHiB,eAGjBA,UAHiB;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAKzBF,MAAAA,IAAI,CAACF,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AAEAN,MAAAA,gBAAgB,CAACM,OAAD,CAAhB,CACGM,IADH,CACS,UAASC,OAAT,EAAiB;AAExB,YAAIC,KAAK,GAAG,IAAZ;AACA,YAAIC,iBAAiB,GAAG,EAAxB;;AACA,YAAIF,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAf,EAAsB;AACrBA,UAAAA,KAAK,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAnB;AACA;;AAED,YAAID,OAAO,CAAC,CAAD,CAAP,CAAWE,iBAAf,EAAkC;AACjCA,UAAAA,iBAAiB,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWE,iBAA/B;AACA;;AAEDN,QAAAA,IAAI,CAACF,QAAL,CAAc;AACbS,UAAAA,IAAI,EAAEF,KADO;AAEbG,UAAAA,gBAAgB,EAAEF;AAFL,SAAd;AAKA,eAAOd,SAAS,CAACY,OAAO,CAAC,CAAD,CAAR,CAAhB;AAEA,OApBF,EAqBED,IArBF,CAqBQ,UAAUM,MAAV,EAAkB;AAExBT,QAAAA,IAAI,CAACF,QAAL,CAAc;AACbY,UAAAA,GAAG,EAAED,MAAM,CAACC,GADC;AAEbC,UAAAA,GAAG,EAAEF,MAAM,CAACE;AAFC,SAAd;AAKIV,QAAAA,UAAU,CAAED,IAAI,CAACY,KAAP,EAAcV,KAAd,CAAV;AAEJ,OA9BF,EA+BEW,KA/BF,CA+BS,UAAUC,KAAV,EAAiB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAjCD;AAmCA,KA7DA;;AAIE,SAAKF,KAAL,GAAa;AACXf,MAAAA,OAAO,EAAE,IADE;AAEda,MAAAA,GAAG,EAAE,IAFS;AAGdC,MAAAA,GAAG,EAAE,IAHS;AAIdJ,MAAAA,IAAI,EAAE,IAJQ;AAKdC,MAAAA,gBAAgB,EAAE,IALJ;AAMdS,MAAAA,OAAO,EAAE;AANK,KAAb;AASD;;AAkDFC,EAAAA,gBAAgB,GAChB;AAAA,QAEOC,UAFP,GAEsB,KAAKxB,KAF3B,CAEOwB,UAFP;AAIC,WAAOA,UAAU,CAACC,WAAX,CAAuBvB,OAA9B;AAEA;;AAEAwB,EAAAA,YAAY,GACZ;AAAA,uBAIoB,KAAK1B,KAJzB;AAAA,QAEQ2B,IAFR,gBAEQA,IAFR;AAAA,QAGQC,MAHR,gBAGQA,MAHR;AAAA,QAIQC,KAJR,gBAIQA,KAJR;;AAME,QAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQE,KAAK,CAACC,UAAN,CAAiBC,KAAzB,CAAT;AACD,KAFD,MAEO;AAEL,aAAOH,MAAM,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,KAAK,CAACG,UAAN,CAAiBD,KAAzB,CADC,GAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAK,CAACI,QAAN,CAAeF,KAAvB,CAFZ;AAID;AAEF;;AAEDG,EAAAA,QAAQ,CAAEC,WAAF,EACR;AAEE,WAAO,oBAAC,kBAAD;AACG,MAAA,KAAK,EAAK,KAAKlB,KAAL,CAAWf,OADxB;AAEG,MAAA,QAAQ,EAAE,KAAKD,YAFlB;AAGG,MAAA,QAAQ,EAAE,KAAKG,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,CAAC;AAAEgC,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,+CACQH,aAAa,CAAC;AAChBD,MAAAA,WAAW,EAAEA;AADG,KAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,EAOE;AAAI,gCAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEII,OAAO,IAAI;AAAI,iCAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFf,EAKIF,WAAW,CAACG,GAAZ,CAAgBC,UAAU,IAAI;AAE5B,YAAMC,SAAS,GAAGD,UAAU,CAACE,MAAX,GACd,yBADc,GAEd,iBAFJ;AAIA,YAAMC,KAAK,GAAGH,UAAU,CAACE,MAAX,GACV;AAAEE,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADU,GAEV;AAAED,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAFJ;AAIA,aACI,4CAAQR,sBAAsB,CAACG,UAAD,EAAa;AACnCC,QAAAA,SADmC;AAEnCE,QAAAA;AAFmC,OAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAII;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIH,UAAU,CAACM,mBAAX,CAA+BC,QADnC,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQP,UAAU,CAACM,mBAAX,CAA+BE,aAAvC,CARJ,CADJ;AAcC,KAxBH,CALJ,CAPF,CAPP,CAAP;AAoDD;;AAEDC,EAAAA,YAAY,GACZ;AAAA,uBAQM,KAAKlD,KARX;AAAA,QAGIO,KAHJ,gBAGIA,KAHJ;AAAA,QAIIoB,IAJJ,gBAIIA,IAJJ;AAAA,QAKIC,MALJ,gBAKIA,MALJ;AAAA,QAMIuB,UANJ,gBAMIA,UANJ;AAAA,QAOItB,KAPJ,gBAOIA,KAPJ;AAUE,WAAOF,IAAI,KAAK,IAAT,GAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAII,KAAKO,QAAL,CAAeN,MAAM,GACHC,KAAK,CAACG,UAAN,CAAiBG,WADd,GAEHN,KAAK,CAACI,QAAN,CAAeE,WAFjC,CAJJ,CADF,EAaIP,MAAM,GACF;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,OAAO,EAAG,MAAM;AAAEuB,QAAAA,UAAU,CAAE5C,KAAF,CAAV;AAAqB,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAEF;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,OAAO,EAAG,MAAM;AAAE4C,QAAAA,UAAU,CAAE,IAAF,CAAV;AAAqB,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfR,CAFH,GAuBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,KAAKjB,QAAL,CAAeL,KAAK,CAACC,UAAN,CAAiBK,WAAhC,CAFJ,CAvBV;AA6BD,GA/L4B,CAiM7B;;;AACAiB,EAAAA,MAAM,GAAG;AAAA,QAGLzB,IAHK,GAIH,KAAK3B,KAJF,CAGL2B,IAHK;AAMP,WACI;AAAK,oBAAaA,IAAI,KAAK,IAAT,GAAgB,aAAhB,GAAgC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKD,YAAL,EADJ,EAEI,KAAKwB,YAAL,EAFJ,CADJ;AAOD;;AA/M4B;;AAkN/B,eAAepD,MAAf","sourcesContent":["import React,\n      { Component } from 'react';\n\nimport PlacesAutocomplete,\n       {\n        geocodeByAddress,\n        getLatLng,\n       } from 'react-places-autocomplete';\n\nclass Fields extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    this.state = {\n      address: null,\n\t\t\tlat: null,\n\t\t\tlng: null,\n\t\t\ttags: null,\n\t\t\tformated_address: null,\n\t\t\tprivacy: null\n    }\n\n  }\n\n  handleChange = address => {\n\t    this.setState({ address });\n  \t};\n\n\thandleSelect = address => {\n\n\t\tlet self = this;\n    let { funcUpdate, index } = this.props;\n\n\t\tself.setState({ address });\n\n\t\tgeocodeByAddress(address)\n\t  \t.then( function(results){\n\n\t\t\t\tvar types = null;\n\t\t\t\tvar formatted_address = '';\n\t\t\t\tif( results[0].types ){\n\t\t\t\t\ttypes = results[0].types;\n\t\t\t\t}\n\n\t\t\t\tif( results[0].formatted_address ){\n\t\t\t\t\tformatted_address = results[0].formatted_address;\n\t\t\t\t}\n\n\t\t\t\tself.setState({\n\t\t\t\t\ttags: types,\n\t\t\t\t\tformated_address: formatted_address,\n\t\t\t\t});\n\n\t\t\t\treturn getLatLng(results[0]);\n\n\t\t\t})\n\t\t\t.then( function( latLng ){\n\n\t\t\t\tself.setState({\n\t\t\t\t\tlat: latLng.lat,\n\t\t\t\t\tlng: latLng.lng,\n\t\t\t\t})\n\n        funcUpdate( self.state, index );\n\n\t\t\t})\n\t \t.catch( function( error ){\n      console.log(error);\n\t\t});\n\n\t};\n\n\tgetLocationValue()\n\t{\n\n\t\tvar { basic_data } = this.props;\n\n\t\treturn basic_data.actual_city.address;\n\n\t}\n\n  processLabel()\n  {\n\n    let { type,\n          remove,\n          texts   } = this.props;\n\n    if( type === \"from\" ){\n      return ( <label>{texts.label_from.label}</label> )\n    } else {\n\n      return remove\n              ? ( <label>{texts.label_stop.label}</label> )\n              : ( <label>{texts.label_to.label}</label> ) ;\n\n    }\n\n  }\n\n  getInput( placeholder )\n  {\n\n    return <PlacesAutocomplete\n              value   ={this.state.address}\n              onChange={this.handleChange}\n              onSelect={this.handleSelect}\n            >\n            {\n              ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                  <span>\n\n                    <input\n                        {...getInputProps({\n                          placeholder: placeholder\n                        })} />\n\n                    <ul data-list-location>\n\n                      { loading && <li data-loading-places>Carregando...</li> }\n\n                      {\n                        suggestions.map(suggestion => {\n\n                          const className = suggestion.active\n                            ? 'suggestion-item--active'\n                            : 'suggestion-item';\n\n                          const style = suggestion.active\n                            ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                            : { backgroundColor: '#ffffff', cursor: 'pointer' };\n\n                          return (\n                              <li {...getSuggestionItemProps(suggestion, {\n                                      className,\n                                      style,\n                                })} >\n                                  <i className=\"icon-location\"></i>\n                                  <p>\n                                    { suggestion.formattedSuggestion.mainText }\n                                  </p>\n                                  <span>{ suggestion.formattedSuggestion.secondaryText }</span>\n                              </li>\n\n                           );\n\n                          })\n                        }\n\n                      </ul>\n                  </span>\n                )\n              }\n            </PlacesAutocomplete>\n\n  }\n\n  processField()\n  {\n\n    let {\n      index,\n      type,\n      remove,\n      funcButton,\n      texts\n    } = this.props;\n\n    return type === \"to\"\n            ? (\n              <span>\n                <div>\n\n                  <i className=\"icon-pin_drop\"></i>\n                  {\n                    this.getInput( remove\n                                    ? texts.label_stop.placeholder\n                                    : texts.label_to.placeholder    )\n                  }\n\n                </div>\n\n                {\n                  remove\n                  ? ( <button className=\"icon-close\"  type=\"button\" onClick={ () => { funcButton( index ) } } ></button> )\n                  : ( <button className=\"icon-add\"    type=\"button\" onClick={ () => { funcButton( this )  } } ></button> )\n                }\n\n              </span>\n            )\n            : (\n              <div>\n                <i className=\"icon-person\"></i>\n                { this.getInput( texts.label_from.placeholder )  }\n              </div>\n            )\n\n  }\n\n  //  funcUpdate\n  render() {\n\n    let {\n      type\n    } = this.props;\n\n    return (\n        <div data-field={ type === \"to\" ? \"with-button\" : \"\"  }>\n          { this.processLabel() }\n          { this.processField() }\n        </div>\n    );\n\n  }\n\n}\nexport default Fields;\n"]},"metadata":{},"sourceType":"module"}