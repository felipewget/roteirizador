{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './../../components/Footer';\nimport Languages from './../../components/Languages';\nimport FormRoterizador from './../../components/FormRoterizador';\nimport PreviewRoterizador from './../../components/PreviewRoterizador';\nimport { getLanguage } from './../../components/i18n';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withScriptjs, withGoogleMap, GoogleMap, DirectionsRenderer, Marker } from 'react-google-maps';\nimport { compose, withProps, lifecycle } from \"recompose\";\n\nclass Roteirizador extends Component {\n  constructor(props) {\n    super();\n    let texts = getLanguage('pt-br');\n    this.state = {\n      texts: texts\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    this.DirectionsService = new window.google.maps.DirectionsService();\n    this.DirectionsService.route({\n      origin: new window.google.maps.LatLng(-1.4519517, -48.468732),\n      destination: new window.google.maps.LatLng(-1.4743965, -48.4554105),\n      waypoints: [{\n        location: new window.google.maps.LatLng(-1.3762847, -48.4239654)\n      }],\n      travelMode: \"DRIVING\",\n      provideRouteAlternatives: true,\n      optimizeWaypoints: true\n    }, function (response, status) {\n      console.log(response);\n\n      if (status === \"OK\") {\n        const coords = response.routes[0].overview_path; // save the path to state\n\n        self.setState({\n          coords\n        });\n      } else {\n        window.alert(\"Directions request failed due to \" + status);\n      }\n    });\n  }\n\n  render() {\n    let texts = this.state.texts;\n    let page_texts = texts.page_home;\n    let self = this; //\n    //\n    //     const GoogleMapExample = withGoogleMap(props => (\n    //       <GoogleMap\n    //         defaultCenter = { { lat: 40.756795, lng: -73.954298 } }\n    //         defaultZoom = { 13 }\n    //       >\n    //\n    // <DirectionsRenderer origin={{ lat: 40.756795, lng: -73.954298 }} destination={{ lat: 41.756795, lng: -78.954298 }} travelMode=\"google.maps.TravelMode.DRIVING\" />\n    //       </GoogleMap>\n    //    ));\n    //     const DirectionsService = new google.maps.DirectionsService();\n    //\n    //     DirectionsService.route({\n    //   origin: new google.maps.LatLng(41.8507300, -87.6512600),\n    //   destination: new google.maps.LatLng(41.8525800, -87.6514100),\n    //   travelMode: google.maps.TravelMode.DRIVING,\n    // }, (result, status) => {\n    //   if (status === google.maps.DirectionsStatus.OK) {\n    //     this.setState({\n    //       directions: result,\n    //     });\n    //   } else {\n    //     console.error(`error fetching directions ${result}`);\n    //   }\n    // });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-container-form\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Roteirizador\"), React.createElement(Languages, {\n      languages_texts: texts.all_languages,\n      actual_language: texts.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(FormRoterizador, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(PreviewRoterizador, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      \"data-container-maps\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, self.state.coords && self.state.coords !== undefined ? React.createElement(DirectionsRenderer, {\n      directions: self.state.coords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }) : \"aaa\"), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Roteirizador;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/index.js"],"names":["React","Component","Fragment","Link","Footer","Languages","FormRoterizador","PreviewRoterizador","getLanguage","PerfectScrollbar","withScriptjs","withGoogleMap","GoogleMap","DirectionsRenderer","Marker","compose","withProps","lifecycle","Roteirizador","constructor","props","texts","state","componentDidMount","self","DirectionsService","window","google","maps","route","origin","LatLng","destination","waypoints","location","travelMode","provideRouteAlternatives","optimizeWaypoints","response","status","console","log","coords","routes","overview_path","setState","alert","render","page_texts","page_home","all_languages","language","undefined"],"mappings":"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","sourcesContent":["import React,\r\n       { Component, Fragment }            from 'react';\r\nimport { Link }                 from 'react-router-dom';\r\nimport Footer                   from './../../components/Footer';\r\nimport Languages                from './../../components/Languages';\r\nimport FormRoterizador          from './../../components/FormRoterizador';\r\nimport PreviewRoterizador       from './../../components/PreviewRoterizador';\r\nimport { getLanguage }          from './../../components/i18n';\r\nimport PerfectScrollbar         from 'react-perfect-scrollbar';\r\n\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n  Marker\r\n} from 'react-google-maps';\r\n\r\nimport { compose, withProps, lifecycle } from \"recompose\";\r\n\r\nclass Roteirizador extends Component {\r\n\r\n  constructor( props )\r\n  {\r\n\r\n    super();\r\n\r\n    let texts = getLanguage('pt-br');\r\n\r\n    this.state = {\r\n      texts: texts\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n\r\n    let self = this;\r\n\r\n    this.DirectionsService = new window.google.maps.DirectionsService();\r\n\r\n    this.DirectionsService.route(\r\n          {\r\n            origin: new window.google.maps.LatLng(-1.4519517, -48.468732),\r\n            destination: new window.google.maps.LatLng(-1.4743965, -48.4554105),\r\n            waypoints: [\r\n              { location: new window.google.maps.LatLng(-1.3762847, -48.4239654) }\r\n            ],\r\n            travelMode: \"DRIVING\",\r\n            provideRouteAlternatives: true,\r\n            optimizeWaypoints: true\r\n          },\r\n          function(response, status) {\r\n            console.log( response)\r\n            if (status === \"OK\") {\r\n              const coords = response.routes[0].overview_path;\r\n             // save the path to state\r\n              self.setState({ coords });\r\n            } else {\r\n              window.alert(\"Directions request failed due to \" + status);\r\n            }\r\n          }\r\n        );\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let { texts }  = this.state;\r\n    let page_texts = texts.page_home;\r\n    let self = this;\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n//     const GoogleMapExample = withGoogleMap(props => (\r\n//       <GoogleMap\r\n//         defaultCenter = { { lat: 40.756795, lng: -73.954298 } }\r\n//         defaultZoom = { 13 }\r\n//       >\r\n//\r\n// <DirectionsRenderer origin={{ lat: 40.756795, lng: -73.954298 }} destination={{ lat: 41.756795, lng: -78.954298 }} travelMode=\"google.maps.TravelMode.DRIVING\" />\r\n//       </GoogleMap>\r\n//    ));\r\n\r\n//     const DirectionsService = new google.maps.DirectionsService();\r\n//\r\n//     DirectionsService.route({\r\n//   origin: new google.maps.LatLng(41.8507300, -87.6512600),\r\n//   destination: new google.maps.LatLng(41.8525800, -87.6514100),\r\n//   travelMode: google.maps.TravelMode.DRIVING,\r\n// }, (result, status) => {\r\n//   if (status === google.maps.DirectionsStatus.OK) {\r\n//     this.setState({\r\n//       directions: result,\r\n//     });\r\n//   } else {\r\n//     console.error(`error fetching directions ${result}`);\r\n//   }\r\n// });\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div data-container-form>\r\n\r\n          <PerfectScrollbar>\r\n\r\n            <h1>Roteirizador</h1>\r\n\r\n            <Languages\r\n              languages_texts={texts.all_languages}\r\n              actual_language={texts.language}/>\r\n\r\n            <FormRoterizador />\r\n            <PreviewRoterizador />\r\n\r\n          </PerfectScrollbar>\r\n\r\n        </div>\r\n\r\n        <div data-container-maps>\r\n\r\n        {\r\n          self.state.coords && self.state.coords !== undefined\r\n            ? <DirectionsRenderer directions={self.state.coords} />\r\n            : \"aaa\"\r\n        }\r\n\r\n        </div>\r\n\r\n        <Footer />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Roteirizador;\r\n"]},"metadata":{},"sourceType":"module"}