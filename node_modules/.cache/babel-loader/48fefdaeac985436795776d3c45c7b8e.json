{"ast":null,"code":"import axios from 'axios';\nimport { URL_BACKEND } from './../constants';\n/**\n *  Verifica se o usuario esta autenticado e redireciona para rotas\n *  permitidas\n *\n *  @param string type authenticated|no_authenticated|\"\"\n *\n *  @return json\n */\n\nexport const isAuthenticated = async (type = \"\") => {\n  let auth_token = localStorage.getItem('auth_token');\n\n  if (auth_token === undefined || auth_token === null || auth_token === \"\") {\n    if (type === 'authenticated') {\n      window.location.href = \"/login\";\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n\n  let response = await axios.get(URL_BACKEND + 'auth', {\n    params: {\n      token: auth_token\n    }\n  });\n\n  if (response.data.success && response.data.metadata && response.data.metadata.authenticated === true) {\n    if (type === 'no_authenticated') {\n      window.location.href = \"/\";\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: true\n      }\n    };\n  } else {\n    localStorage.removeItem('auth_token');\n\n    if (type === 'authenticated') {\n      window.location.href = \"/login\";\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n};\n/**\n *  Login\n *\n *  @param string login<email>\n *  @param string password\n *\n *  @return json\n */\n\nexport const login = async (login, password) => {\n  let response = await axios.post(URL_BACKEND + 'auth', {\n    login: login,\n    password: password\n  });\n\n  if (response.data.success && response.data.metadata && response.data.metadata.authenticated === true) {\n    localStorage.setItem('auth_token', response.data.metadata.token);\n  }\n\n  return response.data;\n};\nexport const loggout = async () => {\n  let auth_token = localStorage.getItem('auth_token');\n  let response = await axios.delete(URL_BACKEND + 'auth', {\n    params: {\n      token: auth_token\n    }\n  });\n  return response.data;\n};\nexport const register = async (full_name, login, password) => {\n  let response = await axios.post(URL_BACKEND + 'register', {\n    name: full_name,\n    login: login,\n    password: password\n  });\n  return response.data;\n};","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/actions/authAction.js"],"names":["axios","URL_BACKEND","isAuthenticated","type","auth_token","localStorage","getItem","undefined","window","location","href","success","metadata","authenticated","response","get","params","token","data","removeItem","login","password","post","setItem","loggout","delete","register","full_name","name"],"mappings":"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","sourcesContent":["import  axios               from 'axios';\nimport  { URL_BACKEND }     from './../constants';\n\n/**\n *  Verifica se o usuario esta autenticado e redireciona para rotas\n *  permitidas\n *\n *  @param string type authenticated|no_authenticated|\"\"\n *\n *  @return json\n */\nexport const isAuthenticated = async ( type = \"\" ) => {\n\n  let auth_token = localStorage.getItem('auth_token');\n\n  if( auth_token === undefined || auth_token === null || auth_token === \"\" ){\n\n    if( type === 'authenticated') {\n        window.location.href=\"/login\"\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n  }\n\n  let response = await axios.get( URL_BACKEND + 'auth', {\n    params: {\n      token: auth_token,\n    }\n  });\n\n  if( response.data.success && response.data.metadata && response.data.metadata.authenticated === true ){\n\n      if( type === 'no_authenticated') {\n          window.location.href=\"/\"\n      }\n\n      return {\n        success: true,\n        metadata: {\n          authenticated: true\n        }\n      }\n\n  } else {\n\n    localStorage.removeItem('auth_token');\n\n    if( type === 'authenticated') {\n        window.location.href=\"/login\"\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n\n  }\n\n\n}\n\n/**\n *  Login\n *\n *  @param string login<email>\n *  @param string password\n *\n *  @return json\n */\nexport const login = async ( login, password ) => {\n\n  let response = await axios.post( URL_BACKEND + 'auth', {\n      login: login,\n      password: password\n  });\n\n  if( response.data.success && response.data.metadata && response.data.metadata.authenticated === true ){\n\n      localStorage.setItem('auth_token', response.data.metadata.token );\n\n  }\n\n  return response.data;\n\n}\n\nexport const loggout = async () => {\n\n  let auth_token = localStorage.getItem('auth_token');\n\n  let response = await axios.delete( URL_BACKEND + 'auth', {\n      params: {\n        token: auth_token\n      }\n  });\n\n  return response.data;\n\n}\n\nexport const register = async ( full_name, login, password ) => {\n\n  let response = await axios.post( URL_BACKEND + 'register', {\n        name: full_name,\n        login: login,\n        password: password\n  });\n\n  return response.data;\n\n}\n"]},"metadata":{},"sourceType":"module"}