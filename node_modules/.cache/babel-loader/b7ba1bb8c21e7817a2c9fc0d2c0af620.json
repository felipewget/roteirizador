{"ast":null,"code":"import axios from 'axios';\nexport const isAuthenticated = async (type = \"\") => {\n  let auth_token = localStorage.getItem('auth_token');\n\n  if (auth_token && auth_token !== undefined && auth_token !== null && auth_token !== \"\") {\n    if (type === 'authenticated') {\n      window.location.href = \"/login\";\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n\n  let response = await axios.get('http://localhost:8080/auth', {\n    params: {\n      token: auth_token\n    }\n  });\n\n  if (response.data.success && response.data.metadata && response.data.metadata.authenticated === true) {\n    localStorage.setItem('auth_token', response.data.metadata.token);\n\n    if (type === 'no_authenticated') {\n      window.location.href = \"/\";\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: true\n      }\n    };\n  } else {\n    if (type === 'authenticated') {\n      window.location.href = \"/login\";\n    } // Error\n\n\n    localStorage.removeItem('auth_token');\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n};\nexport const login = async (login, password) => {\n  let response = await axios.post('http://localhost:8080/auth', {\n    login: login,\n    password: password\n  });\n  return response.data;\n};\nexport const loggout = () => {};\nexport const register = () => {};","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/actions/authAction.js"],"names":["axios","isAuthenticated","type","auth_token","localStorage","getItem","undefined","window","location","href","success","metadata","authenticated","response","get","params","token","data","setItem","removeItem","login","password","post","loggout","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAQC,IAAI,GAAG,EAAf,KAAuB;AAEpD,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AAEA,MAAIF,UAAU,IAAIA,UAAU,KAAKG,SAA7B,IAA0CH,UAAU,KAAK,IAAzD,IAAiEA,UAAU,KAAK,EAApF,EAAwF;AAEtF,QAAID,IAAI,KAAK,eAAb,EAA8B;AAC1BK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACH;;AAED,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAOD;;AAED,MAAIC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,4BAAV,EAAwC;AAC3DC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEb;AADD;AADmD,GAAxC,CAArB;;AAMA,MAAIU,QAAQ,CAACI,IAAT,CAAcP,OAAd,IAAyBG,QAAQ,CAACI,IAAT,CAAcN,QAAvC,IAAmDE,QAAQ,CAACI,IAAT,CAAcN,QAAd,CAAuBC,aAAvB,KAAyC,IAAhG,EAAsG;AAElGR,IAAAA,YAAY,CAACc,OAAb,CAAqB,YAArB,EAAmCL,QAAQ,CAACI,IAAT,CAAcN,QAAd,CAAuBK,KAA1D;;AAEA,QAAId,IAAI,KAAK,kBAAb,EAAiC;AAC7BK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH;;AAED,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAOH,GAfD,MAeO;AAEL,QAAIV,IAAI,KAAK,eAAb,EAA8B;AAC1BK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACH,KAJI,CAML;;;AACAL,IAAAA,YAAY,CAACe,UAAb,CAAwB,YAAxB;AACA,WAAO;AACLT,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAQD;AAGF,CA3DM;AA6DP,OAAO,MAAMQ,KAAK,GAAG,OAAQA,KAAR,EAAeC,QAAf,KAA6B;AAEhD,MAAIR,QAAQ,GAAG,MAAMb,KAAK,CAACsB,IAAN,CAAW,4BAAX,EAAyC;AAC1DF,IAAAA,KAAK,EAAEA,KADmD;AAE1DC,IAAAA,QAAQ,EAAEA;AAFgD,GAAzC,CAArB;AAKA,SAAOR,QAAQ,CAACI,IAAhB;AAED,CATM;AAWP,OAAO,MAAMM,OAAO,GAAG,MAAM,CAAE,CAAxB;AACP,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB","sourcesContent":["import axios from 'axios';\n\nexport const isAuthenticated = async ( type = \"\" ) => {\n\n  let auth_token = localStorage.getItem('auth_token');\n\n  if( auth_token && auth_token !== undefined && auth_token !== null && auth_token !== \"\" ){\n\n    if( type === 'authenticated') {\n        window.location.href=\"/login\"\n    }\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n  }\n\n  let response = await axios.get('http://localhost:8080/auth', {\n    params: {\n      token: auth_token,\n    }\n  });\n\n  if( response.data.success && response.data.metadata && response.data.metadata.authenticated === true ){\n\n      localStorage.setItem('auth_token', response.data.metadata.token );\n\n      if( type === 'no_authenticated') {\n          window.location.href=\"/\"\n      }\n\n      return {\n        success: true,\n        metadata: {\n          authenticated: true\n        }\n      }\n\n  } else {\n\n    if( type === 'authenticated') {\n        window.location.href=\"/login\"\n    }\n\n    // Error\n    localStorage.removeItem('auth_token');\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n\n  }\n\n\n}\n\nexport const login = async ( login, password ) => {\n\n  let response = await axios.post('http://localhost:8080/auth', {\n      login: login,\n      password: password\n  });\n\n  return response.data;\n\n}\n\nexport const loggout = () => {}\nexport const register = () => {}\n"]},"metadata":{},"sourceType":"module"}