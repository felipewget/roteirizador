{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/FormRoterizador/Fields.js\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass Fields extends Component {\n  constructor(props) {\n    super();\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      var _this = this;\n\n      _this.setState({\n        address\n      });\n\n      geocodeByAddress(address).then(function (results) {\n        var types = null;\n        var formatted_address = '';\n\n        if (results[0].types) {\n          types = results[0].types;\n        }\n\n        if (results[0].formatted_address) {\n          formatted_address = results[0].formatted_address;\n        }\n\n        _this.setState({\n          tags: types,\n          formated_address: formatted_address\n        });\n\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        _this.setState({\n          lat: latLng.lat,\n          lng: latLng.lng\n        });\n      }).catch(function (error) {});\n    };\n\n    this.state = {\n      address: null,\n      lat: null,\n      lng: null,\n      tags: null,\n      formated_address: null,\n      privacy: null\n    };\n  } ////\n\n\n  getLocationValue() {\n    var basic_data = this.props.basic_data;\n    return basic_data.actual_city.address;\n  } ////\n\n\n  processLabel() {\n    let type = this.props.type;\n    return type === \"from\" ? React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Origem\") : React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Destino\");\n  }\n\n  processField() {\n    let _this$props = this.props,\n        index = _this$props.index,\n        type = _this$props.type,\n        metadata = _this$props.metadata,\n        remove = _this$props.remove,\n        funcButton = _this$props.funcButton;\n    return type === \"to\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-pin_drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Digite a sua cidade aqui...'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      \"data-list-location\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, loading && React.createElement(\"li\", {\n      \"data-loading-ul\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Carregando...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      var termsArr = suggestion.terms.reverse();\n      return React.createElement(\"li\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), suggestion.formattedSuggestion.mainText), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, suggestion.formattedSuggestion.secondaryText));\n    }))))), remove ? React.createElement(\"button\", {\n      className: \"icon-close\",\n      type: \"button\",\n      onClick: () => {\n        funcButton(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }) : React.createElement(\"button\", {\n      className: \"icon-add\",\n      type: \"button\",\n      onClick: () => {\n        funcButton(this);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Digite a origem aqui\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }));\n  } //  funcUpdate\n\n\n  render() {\n    let _this$props2 = this.props,\n        key = _this$props2.key,\n        type = _this$props2.type,\n        metadata = _this$props2.metadata,\n        remove = _this$props2.remove;\n    return React.createElement(\"div\", {\n      \"data-field\": type === \"to\" ? \"with-button\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.processLabel(), this.processField());\n  }\n\n}\n\nexport default Fields;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/FormRoterizador/Fields.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","Fields","constructor","props","handleChange","address","setState","handleSelect","_this","then","results","types","formatted_address","tags","formated_address","latLng","lat","lng","catch","error","state","privacy","getLocationValue","basic_data","actual_city","processLabel","type","processField","index","metadata","remove","funcButton","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","className","active","style","backgroundColor","cursor","termsArr","terms","reverse","formattedSuggestion","mainText","secondaryText","render","key"],"mappings":"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","sourcesContent":["import React,\n      { Component } from 'react';\n\nimport PlacesAutocomplete,\n       {\n        geocodeByAddress,\n        getLatLng,\n       } from 'react-places-autocomplete';\n\nclass Fields extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    this.state = {\n      address: null,\n\t\t\tlat: null,\n\t\t\tlng: null,\n\t\t\ttags: null,\n\t\t\tformated_address: null,\n\t\t\tprivacy: null\n    }\n\n  }\n\n  ////\n\n  handleChange = address => {\n\t    this.setState({ address });\n  \t};\n\n\thandleSelect = address => {\n\n\t\tvar _this = this;\n\n\t\t_this.setState({ address });\n\n\t\tgeocodeByAddress(address)\n\t  \t.then( function(results){\n\n\t\t\t\tvar types = null;\n\t\t\t\tvar formatted_address = '';\n\t\t\t\tif( results[0].types ){\n\t\t\t\t\ttypes = results[0].types;\n\t\t\t\t}\n\n\t\t\t\tif( results[0].formatted_address ){\n\t\t\t\t\tformatted_address = results[0].formatted_address;\n\t\t\t\t}\n\n\t\t\t\t_this.setState({\n\t\t\t\t\ttags: types,\n\t\t\t\t\tformated_address: formatted_address,\n\t\t\t\t});\n\n\t\t\t\treturn getLatLng(results[0]);\n\n\t\t\t})\n\t\t\t.then( function( latLng ){\n\n\t\t\t\t_this.setState({\n\t\t\t\t\tlat: latLng.lat,\n\t\t\t\t\tlng: latLng.lng,\n\t\t\t\t})\n\n\t\t\t})\n\t \t.catch( function( error ){\n\t\t});\n\n\t};\n\n\tgetLocationValue()\n\t{\n\n\t\tvar { basic_data } = this.props;\n\n\t\treturn basic_data.actual_city.address;\n\n\t}\n\n  ////\n\n  processLabel()\n  {\n\n    let { type  } = this.props;\n\n    return type === \"from\"\n            ? ( <label>Origem</label> )\n            : ( <label>Destino</label> ) ;\n\n  }\n\n  processField()\n  {\n\n    let {\n      index,\n      type,\n      metadata,\n      remove,\n      funcButton\n    } = this.props;\n\n    return type === \"to\"\n            ? (\n              <span>\n                <div>\n                  <i className=\"icon-pin_drop\"></i>\n                  {/*<input type=\"text\" placeholder=\"Digite o destino aqui\"/>*/}\n\n                  <PlacesAutocomplete\n                      value={this.state.address}\n                      onChange={this.handleChange}\n                      onSelect={this.handleSelect}\n                    >\n                      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n\n                          <span>\n                            <input\n                                {...getInputProps({\n                                  placeholder: 'Digite a sua cidade aqui...'\n                                })} />\n\n                              <ul data-list-location>\n                                {loading && <li data-loading-ul>Carregando...</li>}\n                                {suggestions.map(suggestion => {\n\n                                  const className = suggestion.active\n                                    ? 'suggestion-item--active'\n                                    : 'suggestion-item';\n\n                                  // inline style for demonstration purpose\n                                  const style = suggestion.active\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n\n                              var termsArr = suggestion.terms.reverse();\n\n\n                                        return (\n                                      <li {...getSuggestionItemProps(suggestion, {\n                                              className,\n                                              style,\n                                        })} >\n                                            <p>\n                                              <i className=\"icon-location\"></i>\n                                              { suggestion.formattedSuggestion.mainText }\n                                            </p>\n                                            <span>{ suggestion.formattedSuggestion.secondaryText }</span>\n                                        </li>\n\n                                      );\n\n                              })}\n\n                              </ul>\n                          </span>\n                        )}\n                    </PlacesAutocomplete>\n\n\n\n\n\n                </div>\n\n                {\n                  remove\n                  ? ( <button className=\"icon-close\"  type=\"button\" onClick={ () => { funcButton( index ) } } ></button> )\n                  : ( <button className=\"icon-add\"    type=\"button\" onClick={ () => { funcButton( this )  } } ></button> )\n                }\n\n              </span>\n            )\n            : (\n              <div>\n                <i className=\"icon-person\"></i>\n                <input type=\"text\" placeholder=\"Digite a origem aqui\"/>\n              </div>\n            )\n\n  }\n\n  //  funcUpdate\n  render() {\n\n    let {\n      key,\n      type,\n      metadata,\n      remove\n    } = this.props;\n\n    return (\n        <div data-field={ type === \"to\" ? \"with-button\" : \"\"  }>\n          { this.processLabel() }\n          { this.processField() }\n        </div>\n    );\n\n  }\n\n}\nexport default Fields;\n"]},"metadata":{},"sourceType":"module"}