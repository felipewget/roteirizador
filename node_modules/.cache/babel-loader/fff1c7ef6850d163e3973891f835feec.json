{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nclass Map extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      directions: null,\n      route: this.props\n    };\n  }\n\n  componentDidMount() {\n    let route = this.props.route;\n    const directionsService = new window.google.maps.DirectionsService();\n    let origin,\n        destination = null;\n    let waypoints = [];\n\n    for (let i in route) {\n      switch (route[i]) {\n        case 0:\n          origin = {\n            lat: route[i].metadata.lat,\n            lng: route[i].metadata.lng\n          };\n          break;\n\n        case 1:\n          destination = {\n            lat: route[i].metadata.lat,\n            lng: route[i].metadata.lng\n          };\n          break;\n\n        default:\n          waypoints.push({\n            lat: route[i].metadata.lat,\n            lng: route[i].metadata.lng\n          });\n      }\n    }\n\n    if (origin !== null && destination !== null) {\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        optimizeWaypoints: true,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n    }\n  }\n\n  render() {\n    let GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 40.756795,\n        lng: -73.954298\n      },\n      defaultZoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        \"data-google-map\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","constructor","props","state","directions","route","componentDidMount","directionsService","window","google","maps","DirectionsService","origin","destination","waypoints","i","lat","metadata","lng","push","optimizeWaypoints","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","render","GoogleMapExample","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\n\nclass Map extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    this.state = {\n      directions: null,\n      route: this.props,\n    };\n\n  }\n\n  componentDidMount() {\n\n    let { route } = this.props;\n\n    const directionsService = new window.google.maps.DirectionsService();\n\n    let origin, destination = null;\n    let waypoints = [];\n\n    for( let i in route ){\n\n      switch ( route[i] ) {\n\n        case 0:\n          origin = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n          break;\n        case 1:\n          destination = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n          break;\n        default:\n          waypoints.push({ lat: route[i].metadata.lat, lng: route[i].metadata.lng });\n\n      }\n\n    }\n\n    if( origin !== null && destination !== null ){\n\n      directionsService.route(\n        {\n          origin: origin,\n          destination: destination,\n          waypoints: waypoints,\n          optimizeWaypoints: true,\n          travelMode: window.google.maps.TravelMode.DRIVING\n        },\n        (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            this.setState({\n              directions: result\n            });\n          } else {\n            console.error(`error fetching directions ${result}`);\n          }\n        }\n      );\n\n    }\n\n  }\n\n  render() {\n\n    let GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div data-google-map />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}