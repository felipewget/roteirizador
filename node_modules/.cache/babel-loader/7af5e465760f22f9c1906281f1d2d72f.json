{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/components/TabHistory.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { compose, withProps, lifecycle } from \"recompose\";\n\nclass TabHistory extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      tab_opened: false,\n      routes: []\n    };\n  }\n\n  closeHistoryTab() {\n    this.setState({\n      tab_opened: false\n    });\n  }\n\n  formatTimestampToDate(timestamp) {\n    let date = new Date(timestamp);\n    let hours = date.getHours();\n    hours = hours < 10 ? \"0\" + hours : hours;\n    let minutes = date.getMinutes();\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    let year = date.getFullYear();\n    let mounth = date.getMonth() + 1;\n    mounth = mounth < 10 ? \"0\" + mounth : mounth;\n    let day = date.getUTCDate();\n    day = day < 10 ? \"0\" + day : day;\n    return day + \"/\" + mounth + \"/\" + year + \" \" + hours + ':' + minutes;\n  }\n\n  openHistoryTab() {\n    let tab_opened = this.state.tab_opened;\n\n    if (tab_opened == false) {\n      this.setState({\n        tab_opened: true\n      });\n    }\n  }\n\n  renderBlockWithoutRoute() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-info\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Ainda n\\xE3o h\\xE1 rotas realizadas\"));\n  }\n\n  processHistoryRoute() {\n    let self = this;\n    let _this$props = this.props,\n        history_routes = _this$props.history_routes,\n        texts = _this$props.texts;\n    return history_routes.map((route, i) => {\n      return React.createElement(\"div\", {\n        \"data-history-block\": true,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Horario:\"), \" \", self.formatTimestampToDate(route.created), \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"De:\"), \" \", route.route[0] ? route.route[0].metadata.formated_address : \"\", \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\\xC0:\"), \" \", route.route[1] ? route.route[1].metadata.formated_address : \"\", \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"N. Paradas:\"), \" \", route.route.length));\n    });\n  }\n\n  render() {\n    let self = this;\n    let tab_opened = this.state.tab_opened;\n    let history_routes = this.props.history_routes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        self.openHistoryTab();\n      },\n      \"data-container-history\": tab_opened === false ? \"closed\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-button-history\": true,\n      className: \"icon-history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-header\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Hist\\xF3rico de Rotas\"), React.createElement(\"button\", {\n      className: \"icon-close\",\n      onClick: () => {\n        self.closeHistoryTab();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, history_routes.length > 0 ? this.processHistoryRoute() : this.renderBlockWithoutRoute()))));\n  }\n\n}\n\nexport default TabHistory;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/screens/Roteirizador/components/TabHistory.js"],"names":["React","Component","Fragment","Link","PerfectScrollbar","compose","withProps","lifecycle","TabHistory","constructor","props","state","tab_opened","routes","closeHistoryTab","setState","formatTimestampToDate","timestamp","date","Date","hours","getHours","minutes","getMinutes","year","getFullYear","mounth","getMonth","day","getUTCDate","openHistoryTab","renderBlockWithoutRoute","processHistoryRoute","self","history_routes","texts","map","route","i","created","metadata","formated_address","length","render"],"mappings":"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","sourcesContent":["import React,\n       { Component, Fragment }            from 'react';\nimport { Link }                 from 'react-router-dom';\n\nimport PerfectScrollbar         from 'react-perfect-scrollbar';\n\nimport { compose, withProps, lifecycle } from \"recompose\";\n\nclass TabHistory extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    this.state = {\n      tab_opened: false,\n      routes: [],\n    }\n\n  }\n\n\n  closeHistoryTab()\n  {\n\n    this.setState({\n      tab_opened: false\n    })\n\n  }\n\n  formatTimestampToDate( timestamp )\n  {\n\n    let date    = new Date(timestamp);\n    let hours   = date.getHours();\n        hours   = hours < 10\n                  ? \"0\" + hours\n                  : hours;\n\n    let minutes = date.getMinutes();\n        minutes = minutes < 10\n                  ? \"0\" + minutes\n                  : minutes;\n\n    let year    = date.getFullYear();\n\n    let mounth  = date.getMonth() + 1;\n        mounth  = mounth < 10\n                ? \"0\" + mounth\n                : mounth;\n\n    let day = date.getUTCDate();\n        day = day < 10\n              ? \"0\" + day\n              : day;\n\n    return day + \"/\" + mounth + \"/\"+ year + \" \" + hours + ':' + minutes;\n\n  }\n\n  openHistoryTab()\n  {\n\n    let { tab_opened } = this.state;\n\n    if( tab_opened == false ){\n\n      this.setState({\n        tab_opened: true\n      })\n\n    }\n\n  }\n\n  renderBlockWithoutRoute()\n  {\n\n    return (\n      <div>\n        <p data-info>Ainda não há rotas realizadas</p>\n      </div>\n    );\n\n  }\n\n  processHistoryRoute()\n  {\n\n    let self = this;\n    let { history_routes,\n          texts           }  = this.props;\n\n    return history_routes.map( ( route, i ) => {\n\n        return (\n          <div data-history-block\n            key={i}>\n            <p><span>Horario:</span> { self.formatTimestampToDate( route.created ) } </p>\n            <p><span>De:</span> { route.route[0] ? route.route[0].metadata.formated_address : \"\" } </p>\n            <p><span>À:</span> { route.route[1] ? route.route[1].metadata.formated_address : \"\" } </p>\n            <p><span>N. Paradas:</span> { route.route.length }</p>\n            {/*<button>Visualizar</button>*/}\n          </div>\n        );\n\n    })\n\n  }\n\n  render() {\n\n    let self = this;\n    let { tab_opened }  = this.state;\n    let { history_routes }  = this.props;\n\n    return (\n      <div>\n\n        <div  onClick={ () => { self.openHistoryTab() } }\n              data-container-history={\n              tab_opened === false\n                ? \"closed\"\n                : \"\"\n              } >\n\n          <button\n            data-button-history\n            className=\"icon-history\"></button>\n\n          <PerfectScrollbar>\n\n            <div data-header>\n              <p>Histórico de Rotas</p>\n              <button\n                className=\"icon-close\"\n                onClick={ () => { self.closeHistoryTab() } }></button>\n            </div>\n\n            <div>\n\n                {\n                  history_routes.length > 0\n                  ? this.processHistoryRoute()\n                  : this.renderBlockWithoutRoute()\n                }\n            </div>\n\n          </PerfectScrollbar>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default TabHistory;\n"]},"metadata":{},"sourceType":"module"}