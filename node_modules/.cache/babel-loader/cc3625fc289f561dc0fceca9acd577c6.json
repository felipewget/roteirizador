{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/oliveira-capital/src/components/Header/Languages.js\";\nimport React, { Component } from 'react';\n\nclass Languages extends Component {\n  constructor(props) {\n    super();\n  }\n\n  processLanguages() {\n    let languages_texts = this.props.languages_texts;\n    return languages_texts.map(language => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, language.name));\n    });\n  }\n\n  processActualLanguage() {\n    let _this$props = this.props,\n        languages_texts = _this$props.languages_texts,\n        actual_language = _this$props.actual_language;\n    alert(actual_language);\n    let language = \"\";\n\n    for (let index in languages_texts) {\n      if (languages_texts[index].cod == actual_language) {\n        language = languages_texts[index].name;\n      }\n    }\n\n    return language;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      \"data-container-language\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-actual-language\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.processActualLanguage())), React.createElement(\"ul\", {\n      \"data-list-languages\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.processLanguages()));\n  }\n\n}\n\nexport default Languages;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/oliveira-capital/src/components/Header/Languages.js"],"names":["React","Component","Languages","constructor","props","processLanguages","languages_texts","map","language","name","processActualLanguage","actual_language","alert","index","cod","render"],"mappings":";AAAA,OAAOA,KAAP,IACQC,SADR,QACyB,OADzB;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAEhCE,EAAAA,WAAW,CAAEC,KAAF,EACX;AAEE;AAED;;AAEDC,EAAAA,gBAAgB,GAChB;AAAA,QAEQC,eAFR,GAE4B,KAAKF,KAFjC,CAEQE,eAFR;AAIE,WAAOA,eAAe,CAACC,GAAhB,CAAuBC,QAAF,IAAgB;AAC1C,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,QAAQ,CAACC,IAAb,CAFF,CADF;AAMD,KAPM,CAAP;AASD;;AAEDC,EAAAA,qBAAqB,GACrB;AAAA,sBAG4B,KAAKN,KAHjC;AAAA,QAEQE,eAFR,eAEQA,eAFR;AAAA,QAGQK,eAHR,eAGQA,eAHR;AAIFC,IAAAA,KAAK,CAACD,eAAD,CAAL;AACI,QAAIH,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIK,KAAT,IAAkBP,eAAlB,EAAmC;AAEjC,UAAIA,eAAe,CAAEO,KAAF,CAAf,CAAyBC,GAAzB,IAAgCH,eAApC,EAAqD;AACnDH,QAAAA,QAAQ,GAAGF,eAAe,CAAEO,KAAF,CAAf,CAAyBJ,IAApC;AACD;AAEF;;AAED,WAAOD,QAAP;AAED;;AAEDO,EAAAA,MAAM,GAAG;AAEP,WACI;AAAK,qCAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,kCAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,qBAAL,EAAJ,CAFF,CADF,EAKE;AAAI,iCAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,gBAAL,EADH,CALF,CADJ;AA4BD;;AA3E+B;;AA6ElC,eAAeH,SAAf","sourcesContent":["import React,\r\n      { Component } from 'react';\r\n\r\nclass Languages extends Component {\r\n\r\n  constructor( props )\r\n  {\r\n\r\n    super();\r\n\r\n  }\r\n\r\n  processLanguages()\r\n  {\r\n\r\n    let { languages_texts } = this.props;\r\n\r\n    return languages_texts.map( ( language ) => {\r\n      return (\r\n        <li>\r\n          <i></i>\r\n          <p>{language.name}</p>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  processActualLanguage()\r\n  {\r\n\r\n    let { languages_texts ,\r\n          actual_language } = this.props;\r\nalert(actual_language)\r\n    let language = \"\";\r\n\r\n    for( let index in languages_texts ){\r\n\r\n      if( languages_texts[ index ].cod == actual_language ){\r\n        language = languages_texts[ index ].name;\r\n      }\r\n\r\n    }\r\n\r\n    return language;\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div data-container-language>\r\n          <div data-actual-language>\r\n            <i></i>\r\n            <p>{this.processActualLanguage()}</p>\r\n          </div>\r\n          <ul data-list-languages>\r\n            {this.processLanguages()}\r\n            {/*\r\n              <li>\r\n                <i></i>\r\n                <p>Portugues</p>\r\n              </li>\r\n              <li>\r\n                <i></i>\r\n                <p>Ingles</p>\r\n              </li>\r\n              <li>\r\n                <i></i>\r\n                <p>Frances</p>\r\n              </li>\r\n              <li>\r\n                <i></i>\r\n                <p>Alemao</p>\r\n              </li>*/}\r\n          </ul>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Languages;\r\n"]},"metadata":{},"sourceType":"module"}