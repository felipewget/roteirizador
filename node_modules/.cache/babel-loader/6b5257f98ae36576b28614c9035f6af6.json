{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nclass Map extends Component {\n  constructor(props) {\n    super();\n    let route = props.route;\n    this.state = {\n      directions: null,\n      route: route\n    };\n  }\n\n  componentDidMount() {\n    let route = this.state.route;\n    const directionsService = new window.google.maps.DirectionsService();\n    var origin,\n        destination = null;\n    var waypoints = [];\n\n    for (let i in route) {\n      if (route[i].metadata && route[i].metadata.lat) {\n        // console.log(i)\n        // console.log(route[i])\n        switch (i) {\n          case 0:\n            origin = {\n              lat: route[i].metadata.lat,\n              lng: route[i].metadata.lng\n            };\n            console.log(origin);\n            break;\n\n          case 1:\n            destination = {\n              lat: route[i].metadata.lat,\n              lng: route[i].metadata.lng\n            };\n            break;\n\n          default:\n            waypoints.push({\n              lat: route[i].metadata.lat,\n              lng: route[i].metadata.lng\n            });\n        }\n      }\n    }\n\n    console.log('--------------');\n    console.log('--------------');\n    console.log('--------------');\n    console.log(origin);\n    console.log(destination);\n    console.log(waypoints);\n    console.log('--------------');\n    console.log('--------------');\n    console.log('--------------');\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      optimizeWaypoints: true,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n  }\n\n  render() {\n    let GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 40.756795,\n        lng: -73.954298\n      },\n      defaultZoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        \"data-google-map\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","constructor","props","route","state","directions","componentDidMount","directionsService","window","google","maps","DirectionsService","origin","destination","waypoints","i","metadata","lat","lng","console","log","push","optimizeWaypoints","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","error","render","GoogleMapExample","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\n\nclass Map extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    let { route } = props\n\n    this.state = {\n      directions: null,\n      route: route,\n    };\n\n  }\n\n  componentDidMount() {\n\n    let { route } = this.state;\n\n    const directionsService = new window.google.maps.DirectionsService();\n\n    var origin, destination = null;\n    var waypoints = [];\n\n    for( let i in route ){\n\n      if( route[i].metadata && route[i].metadata.lat ){\n        // console.log(i)\n// console.log(route[i])\n        switch ( i ) {\n\n          case 0:\n            origin = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n            console.log( origin );\n            break;\n          case 1:\n            destination = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n            break;\n          default:\n            waypoints.push({ lat: route[i].metadata.lat, lng: route[i].metadata.lng });\n\n        }\n\n      }\n\n    }\n\n    console.log( '--------------' )\n    console.log( '--------------' )\n    console.log( '--------------' )\nconsole.log( origin )\nconsole.log( destination )\nconsole.log( waypoints )\nconsole.log( '--------------' )\nconsole.log( '--------------' )\nconsole.log( '--------------' )\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        optimizeWaypoints: true,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n\n  }\n\n  render() {\n\n    let GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div data-google-map />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}