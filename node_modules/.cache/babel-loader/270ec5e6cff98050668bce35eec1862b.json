{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/screens/Roteirizador/index.js\";\nimport React, { Component } from 'react';\nimport Footer from './../../components/Footer';\nimport Languages from './../../components/Languages';\nimport FormRoterizador from './../../components/FormRoterizador';\nimport PreviewRoterizador from './../../components/PreviewRoterizador';\nimport { getLanguage } from './../../components/i18n';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withScriptjs } from 'react-google-maps';\nimport { loadDirections } from './../../actions/mapAction';\nimport LoadingScreen from './../../components/LoadingScreen';\nimport Map from './../../components/Map';\nimport TabHistory from './components/TabHistory';\nimport { isAuthenticated, loggout } from './../../actions/authAction';\nimport { addRoute, listRoutes } from './../../actions/routeAction';\n/**\r\n *  Tela do Renderizador\r\n */\n\nclass Roteirizador extends Component {\n  constructor(props) {\n    super();\n\n    this.renderPage = () => {\n      let _this$state = this.state,\n          texts = _this$state.texts,\n          directions = _this$state.directions,\n          arr_list_routes = _this$state.arr_list_routes;\n      let footer = texts.footer,\n          page_roteirizador = texts.page_roteirizador,\n          form_error_messages = texts.form_error_messages;\n      let MapLoader = withScriptjs(Map);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-container-form\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, page_roteirizador.title), React.createElement(\"button\", {\n        \"data-button-loggout\": true,\n        className: \"icon-power_settings_new\",\n        onClick: async () => {\n          await loggout();\n          window.location.reload();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Languages, {\n        languages_texts: texts.all_languages,\n        actual_language: texts.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(FormRoterizador, {\n        funcUpdateMap: this.updateMap,\n        texts: page_roteirizador.form_roteirizador,\n        form_error_messages: form_error_messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(PreviewRoterizador, {\n        directions: directions,\n        texts: page_roteirizador.preview_roteirizador,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(TabHistory, {\n        history_routes: arr_list_routes,\n        texts: page_roteirizador.history_routes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        \"data-container-maps\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(MapLoader, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBadM1YaUkhSp7Kki0F-Dj382ZxW-8VZxw\",\n        loadingElement: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }),\n        directions: directions.length === 0 ? null : directions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        texts: footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    };\n\n    let _texts = getLanguage();\n\n    this.state = {\n      loading_page: true,\n      texts: _texts,\n      arr_route: [],\n      directions: [],\n      arr_list_routes: []\n    };\n    this.updateMap = this.updateMap.bind(this);\n  }\n\n  async componentDidMount() {\n    document.title = \"Roteirizador\";\n    let auth_response = await isAuthenticated('authenticated');\n    let routes_response = await listRoutes();\n\n    if (auth_response.metadata && auth_response.metadata.authenticated === true) {\n      this.setState({\n        loading_page: false,\n        arr_list_routes: routes_response.metadata\n      });\n    }\n  }\n\n  async updateMap(arr_route) {\n    let arr_list_routes = this.state.arr_list_routes;\n    let response = await loadDirections(arr_route);\n    let response_route = await addRoute(arr_route);\n\n    if (response_route.success) {\n      arr_list_routes.unshift(response_route.metadata);\n      this.setState({\n        arr_route: arr_route,\n        arr_list_routes: arr_list_routes,\n        directions: response.metadata\n      });\n    }\n  }\n\n  render() {\n    let loading_page = this.state.loading_page;\n    return loading_page ? React.createElement(LoadingScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : this.renderPage();\n    ;\n  }\n\n}\n\nexport default Roteirizador;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/screens/Roteirizador/index.js"],"names":["React","Component","Footer","Languages","FormRoterizador","PreviewRoterizador","getLanguage","PerfectScrollbar","withScriptjs","loadDirections","LoadingScreen","Map","TabHistory","isAuthenticated","loggout","addRoute","listRoutes","Roteirizador","constructor","props","renderPage","state","texts","directions","arr_list_routes","footer","page_roteirizador","form_error_messages","MapLoader","title","window","location","reload","all_languages","language","updateMap","form_roteirizador","preview_roteirizador","history_routes","length","loading_page","arr_route","bind","componentDidMount","document","auth_response","routes_response","metadata","authenticated","setState","response","response_route","success","unshift","render"],"mappings":"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","sourcesContent":["import React,\r\n       { Component }            from 'react';\r\nimport Footer                   from './../../components/Footer';\r\nimport Languages                from './../../components/Languages';\r\nimport FormRoterizador          from './../../components/FormRoterizador';\r\nimport PreviewRoterizador       from './../../components/PreviewRoterizador';\r\nimport { getLanguage }          from './../../components/i18n';\r\nimport PerfectScrollbar         from 'react-perfect-scrollbar';\r\nimport { withScriptjs }         from 'react-google-maps';\r\nimport { loadDirections }       from './../../actions/mapAction';\r\nimport LoadingScreen            from './../../components/LoadingScreen';\r\nimport Map                      from './../../components/Map';\r\nimport TabHistory               from './components/TabHistory';\r\nimport {  isAuthenticated,\r\n          loggout             } from './../../actions/authAction';\r\nimport {  addRoute,\r\n          listRoutes        }   from './../../actions/routeAction';\r\n\r\n/**\r\n *  Tela do Renderizador\r\n */\r\nclass Roteirizador extends Component {\r\n\r\n  constructor( props )\r\n  {\r\n\r\n    super();\r\n\r\n    let texts = getLanguage();\r\n\r\n    this.state = {\r\n      loading_page  : true,\r\n      texts         : texts,\r\n      arr_route     : [],\r\n      directions    : [],\r\n      arr_list_routes : []\r\n    }\r\n\r\n    this.updateMap    = this.updateMap.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount()\r\n  {\r\n\r\n    document.title      = \"Roteirizador\"\r\n\r\n    let auth_response   = await isAuthenticated( 'authenticated' );\r\n    let routes_response = await listRoutes();\r\n\r\n    if( auth_response.metadata && auth_response.metadata.authenticated === true ){\r\n\r\n      this.setState({\r\n        loading_page : false,\r\n        arr_list_routes: routes_response.metadata\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  async updateMap( arr_route )\r\n  {\r\n\r\n    let { arr_list_routes } = this.state;\r\n\r\n    let response        = await loadDirections( arr_route );\r\n    let response_route  = await addRoute( arr_route );\r\n\r\n    if( response_route.success ){\r\n\r\n      arr_list_routes.unshift( response_route.metadata );\r\n\r\n      this.setState({\r\n        arr_route    : arr_route,\r\n        arr_list_routes: arr_list_routes,\r\n        directions   : response.metadata\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  renderPage = () => {\r\n\r\n    let { texts,\r\n          directions,\r\n          arr_list_routes }           = this.state;\r\n    let { footer,\r\n          page_roteirizador,\r\n          form_error_messages       } = texts;\r\n\r\n    let MapLoader                     = withScriptjs(Map);\r\n\r\n    return (\r\n      <div>\r\n\r\n        <div data-container-form>\r\n\r\n          <PerfectScrollbar>\r\n\r\n            <h1>{page_roteirizador.title}</h1>\r\n            <button\r\n              data-button-loggout\r\n              className=\"icon-power_settings_new\"\r\n              onClick={ async () => {\r\n                  await loggout();\r\n                  window.location.reload();\r\n                }}></button>\r\n\r\n            <Languages\r\n              languages_texts = { texts.all_languages }\r\n              actual_language = { texts.language      } />\r\n\r\n\r\n            <FormRoterizador\r\n              funcUpdateMap = { this.updateMap  }\r\n              texts         = { page_roteirizador.form_roteirizador }\r\n              form_error_messages = { form_error_messages } />\r\n\r\n            <PreviewRoterizador\r\n              directions  = { directions  }\r\n              texts       = { page_roteirizador.preview_roteirizador  } />\r\n\r\n          </PerfectScrollbar>\r\n\r\n        </div>\r\n\r\n        <TabHistory\r\n          history_routes  = { arr_list_routes }\r\n          texts           = { page_roteirizador.history_routes  } />\r\n\r\n        <div data-container-maps>\r\n\r\n          {\r\n              <MapLoader\r\n                googleMapURL    = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBadM1YaUkhSp7Kki0F-Dj382ZxW-8VZxw\"\r\n                loadingElement  = { <div /> }\r\n                directions      = { directions.length === 0 ? null : directions } />\r\n          }\r\n\r\n        </div>\r\n\r\n        <Footer\r\n          texts={footer}/>\r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let { loading_page } = this.state;\r\n\r\n    return loading_page\r\n            ? <LoadingScreen />\r\n            : this.renderPage();;\r\n  }\r\n\r\n}\r\n\r\nexport default Roteirizador;\r\n"]},"metadata":{},"sourceType":"module"}