{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/components/FormRegister/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { register, login } from './../../actions/authAction';\nimport { checkHasValue, checkPassword, checkEmail } from './../../utils/formValidate';\nimport './../FormLogin/index.css';\n\nclass FormRegister extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      full_name: \"\",\n      email: \"\",\n      password: \"\",\n      loading: false,\n      error: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  updateState(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  validate() {\n    let _this$state = this.state,\n        email = _this$state.email,\n        password = _this$state.password,\n        full_name = _this$state.full_name;\n\n    if (!checkHasValue(email) || !checkHasValue(password) || !checkHasValue(full_name)) {\n      return {\n        validate: false,\n        error: \"Todos os campos sao obrigatórios\"\n      };\n    }\n\n    if (!checkFullName(full_name)) {\n      return {\n        validate: false,\n        error: \"Email Inválido\"\n      };\n    }\n\n    if (!checkEmail(email)) {\n      return {\n        validate: false,\n        error: \"Email Inválido\"\n      };\n    }\n\n    if (!checkPassword(password)) {\n      return {\n        validate: false,\n        error: \"password Inválido ( Deve conter pelo menos 8 caracteres )\"\n      };\n    }\n\n    return true;\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let _this$state2 = this.state,\n        full_name = _this$state2.full_name,\n        email = _this$state2.email,\n        password = _this$state2.password;\n    let validation = this.validate();\n\n    if (validation === true) {\n      this.setState({\n        loading: true\n      });\n      let response = await register(full_name, email, password);\n\n      if (response.success === true && response.metadata && response.metadata[0] && response.metadata[0]._id) {\n        response = await login(email, password);\n\n        if (response.success && response.metadata && response.metadata.authenticated === true) {\n          window.location.reload();\n        } else {\n          this.setState({\n            error: \"Erro ao tentar logar, pela pagina de login\",\n            loading: false\n          });\n        }\n      } else {\n        let error = response.error ? response.error : \"Erro ao criar sua conta\";\n        this.setState({\n          error: error,\n          loading: false\n        });\n      }\n    } else {\n      this.setState({\n        error: validation.error,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    let _this$state3 = this.state,\n        email = _this$state3.email,\n        password = _this$state3.password,\n        loading = _this$state3.loading,\n        error = _this$state3.error,\n        full_name = _this$state3.full_name;\n    let texts = this.props.texts;\n    return React.createElement(\"div\", {\n      \"data-component\": \"form-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      \"data-form-type\": loading === true ? \"loading\" : \"\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-header\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, texts.titleå)), React.createElement(\"div\", {\n      \"data-field\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-smiley\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: full_name,\n      onChange: e => {\n        this.updateState(\"full_name\", e.target.value);\n      },\n      placeholder: texts.form.full_name.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      \"data-field\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => {\n        this.updateState(\"email\", e.target.value);\n      },\n      placeholder: texts.form.email.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      \"data-field\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => {\n        this.updateState(\"password\", e.target.value);\n      },\n      placeholder: texts.form.password.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), error && error !== \"\" ? React.createElement(\"p\", {\n      \"data-error\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, error) : \"\", React.createElement(\"button\", {\n      \"data-submit\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, texts.form.button_submit.text), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-link\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, texts.link_login.text))));\n  }\n\n}\n\nexport default FormRegister;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/git/roteirizador/src/components/FormRegister/index.js"],"names":["React","Component","Link","register","login","checkHasValue","checkPassword","checkEmail","FormRegister","constructor","props","state","full_name","email","password","loading","error","handleSubmit","bind","updateState","field","value","setState","validate","checkFullName","e","preventDefault","validation","response","success","metadata","_id","authenticated","window","location","reload","render","texts","titleå","target","form","placeholder","button_submit","text","link_login"],"mappings":";AAAA,OAAOA,KAAP,IACSC,SADT,QACqC,OADrC;AAEA,SAASC,IAAT,QAAqC,kBAArC;AACA,SAAUC,QAAV,EACUC,KADV,QACqC,4BADrC;AAEA,SAAUC,aAAV,EACUC,aADV,EAEUC,UAFV,QAEoC,4BAFpC;AAGA,OAAO,0BAAP;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAEnCQ,EAAAA,WAAW,CAAEC,KAAF,EACX;AAEE;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAG,EADD;AAEXC,MAAAA,KAAK,EAAO,EAFD;AAGXC,MAAAA,QAAQ,EAAI,EAHD;AAIXC,MAAAA,OAAO,EAAK,KAJD;AAKXC,MAAAA,KAAK,EAAO;AALD,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAED;;AAEDC,EAAAA,WAAW,CAAEC,KAAF,EAASC,KAAT,EACX;AAEE,SAAKC,QAAL,CAAc;AACZ,OAACF,KAAD,GAASC;AADG,KAAd;AAID;;AAEDE,EAAAA,QAAQ,GACR;AAAA,sBAIsB,KAAKZ,KAJ3B;AAAA,QAEQE,KAFR,eAEQA,KAFR;AAAA,QAGQC,QAHR,eAGQA,QAHR;AAAA,QAIQF,SAJR,eAIQA,SAJR;;AAME,QAAI,CAACP,aAAa,CAAEQ,KAAF,CAAd,IAA2B,CAACR,aAAa,CAAES,QAAF,CAAzC,IAAyD,CAACT,aAAa,CAAEO,SAAF,CAA3E,EAA0F;AAExF,aAAO;AACLW,QAAAA,QAAQ,EAAE,KADL;AAELP,QAAAA,KAAK,EAAK;AAFL,OAAP;AAKD;;AAED,QAAI,CAACQ,aAAa,CAAEZ,SAAF,CAAlB,EAAkC;AAEhC,aAAO;AACLW,QAAAA,QAAQ,EAAE,KADL;AAELP,QAAAA,KAAK,EAAK;AAFL,OAAP;AAKD;;AAED,QAAI,CAACT,UAAU,CAAEM,KAAF,CAAf,EAA2B;AAEzB,aAAO;AACLU,QAAAA,QAAQ,EAAE,KADL;AAELP,QAAAA,KAAK,EAAK;AAFL,OAAP;AAKD;;AAED,QAAI,CAACV,aAAa,CAAEQ,QAAF,CAAlB,EAAiC;AAE/B,aAAO;AACLS,QAAAA,QAAQ,EAAE,KADL;AAELP,QAAAA,KAAK,EAAK;AAFL,OAAP;AAKD;;AAED,WAAO,IAAP;AAED;;AAED,QAAMC,YAAN,CAAoBQ,CAApB,EACA;AAEEA,IAAAA,CAAC,CAACC,cAAF;AAFF,uBAMqB,KAAKf,KAN1B;AAAA,QAIQC,SAJR,gBAIQA,SAJR;AAAA,QAKQC,KALR,gBAKQA,KALR;AAAA,QAMQC,QANR,gBAMQA,QANR;AAQE,QAAIa,UAAU,GAAG,KAAKJ,QAAL,EAAjB;;AAEA,QAAII,UAAU,KAAK,IAAnB,EAAyB;AAEvB,WAAKL,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE;AADG,OAAd;AAIA,UAAIa,QAAQ,GAAG,MAAMzB,QAAQ,CAAES,SAAF,EAAaC,KAAb,EAAoBC,QAApB,CAA7B;;AAEA,UAAIc,QAAQ,CAACC,OAAT,KAAqB,IAArB,IAA6BD,QAAQ,CAACE,QAAtC,IAAkDF,QAAQ,CAACE,QAAT,CAAkB,CAAlB,CAAlD,IAA0EF,QAAQ,CAACE,QAAT,CAAkB,CAAlB,EAAqBC,GAAnG,EAAwG;AAEtGH,QAAAA,QAAQ,GAAG,MAAMxB,KAAK,CAAES,KAAF,EAASC,QAAT,CAAtB;;AAEA,YAAIc,QAAQ,CAACC,OAAT,IAAoBD,QAAQ,CAACE,QAA7B,IAAyCF,QAAQ,CAACE,QAAT,CAAkBE,aAAlB,KAAoC,IAAjF,EAAwF;AACtFC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,SAFD,MAEO;AAEL,eAAKb,QAAL,CAAc;AACZN,YAAAA,KAAK,EAAK,4CADE;AAEZD,YAAAA,OAAO,EAAG;AAFE,WAAd;AAKD;AAEF,OAfD,MAeO;AAEL,YAAIC,KAAK,GAAGY,QAAQ,CAACZ,KAAT,GACEY,QAAQ,CAACZ,KADX,GAEE,yBAFd;AAIA,aAAKM,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAKA,KADE;AAEZD,UAAAA,OAAO,EAAG;AAFE,SAAd;AAKD;AAEF,KApCD,MAoCO;AAEL,WAAKO,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAKW,UAAU,CAACX,KADT;AAEZD,QAAAA,OAAO,EAAG;AAFE,OAAd;AAKD;AAEF;;AAEDqB,EAAAA,MAAM,GACN;AAAA,uBAM0B,KAAKzB,KAN/B;AAAA,QAEQE,KAFR,gBAEQA,KAFR;AAAA,QAGQC,QAHR,gBAGQA,QAHR;AAAA,QAIQC,OAJR,gBAIQA,OAJR;AAAA,QAKQC,KALR,gBAKQA,KALR;AAAA,QAMQJ,SANR,gBAMQA,SANR;AAAA,QAQQyB,KARR,GAQkB,KAAK3B,KARvB,CAQQ2B,KARR;AAUE,WACE;AAAK,wBAAe,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,wBAAkBtB,OAAO,KAAK,IAAZ,GAAoB,SAApB,GAAgC,EADpD;AAEE,MAAA,QAAQ,EAAE,KAAKE,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,yBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKoB,KAAK,CAACC,MAAX,CAFF,CAJF,EASE;AAAK,wBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE1B,SAFT;AAGE,MAAA,QAAQ,EAAKa,CAAF,IAAS;AAAE,aAAKN,WAAL,CAAkB,WAAlB,EAA+BM,CAAC,CAACc,MAAF,CAASlB,KAAxC;AAAiD,OAHzE;AAIE,MAAA,WAAW,EAAEgB,KAAK,CAACG,IAAN,CAAW5B,SAAX,CAAqB6B,WAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,EAkBE;AAAK,wBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE5B,KAFT;AAGE,MAAA,QAAQ,EAAKY,CAAF,IAAS;AAAE,aAAKN,WAAL,CAAkB,OAAlB,EAA2BM,CAAC,CAACc,MAAF,CAASlB,KAApC;AAA6C,OAHrE;AAIE,MAAA,WAAW,EAAEgB,KAAK,CAACG,IAAN,CAAW3B,KAAX,CAAiB4B,WAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,EA2BE;AAAK,wBAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAE3B,QAFT;AAGE,MAAA,QAAQ,EAAKW,CAAF,IAAS;AAAE,aAAKN,WAAL,CAAkB,UAAlB,EAA8BM,CAAC,CAACc,MAAF,CAASlB,KAAvC;AAAgD,OAHxE;AAIE,MAAA,WAAW,EAAEgB,KAAK,CAACG,IAAN,CAAW1B,QAAX,CAAoB2B,WAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA3BF,EAqCIzB,KAAK,IAAIA,KAAK,KAAK,EAAnB,GACG;AAAG,wBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,KAAf,CADH,GAEE,EAvCN,EA0CE;AAAQ,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqB,KAAK,CAACG,IAAN,CAAWE,aAAX,CAAyBC,IAD5B,CA1CF,EA8CE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB;AAAG,uBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcN,KAAK,CAACO,UAAN,CAAiBD,IAA/B,CAAlB,CA9CF,CAFF,CADF;AAuDD;;AAvMkC;;AA2MrC,eAAenC,YAAf","sourcesContent":["import React,\n       { Component }            from 'react';\nimport { Link }                 from 'react-router-dom';\nimport {  register,\n          login            }    from './../../actions/authAction';\nimport {  checkHasValue,\n          checkPassword,\n          checkEmail         } from './../../utils/formValidate';\nimport './../FormLogin/index.css';\n\nclass FormRegister extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    this.state = {\n      full_name : \"\",\n      email     : \"\",\n      password  : \"\",\n      loading   : false,\n      error     : \"\"\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  updateState( field, value )\n  {\n\n    this.setState({\n      [field]: value\n    })\n\n  }\n\n  validate()\n  {\n\n    let { email,\n          password,\n          full_name } = this.state;\n\n    if( !checkHasValue( email ) || !checkHasValue( password ) || !checkHasValue( full_name ) ){\n\n      return {\n        validate: false,\n        error   : \"Todos os campos sao obrigatórios\"\n      }\n\n    }\n\n    if( !checkFullName( full_name )  ){\n\n      return {\n        validate: false,\n        error   : \"Email Inválido\"\n      }\n\n    }\n\n    if( !checkEmail( email )  ){\n\n      return {\n        validate: false,\n        error   : \"Email Inválido\"\n      }\n\n    }\n\n    if( !checkPassword( password )  ){\n\n      return {\n        validate: false,\n        error   : \"password Inválido ( Deve conter pelo menos 8 caracteres )\"\n      }\n\n    }\n\n    return true;\n\n  }\n\n  async handleSubmit( e )\n  {\n\n    e.preventDefault();\n\n    let { full_name,\n          email,\n          password } = this.state;\n\n    let validation = this.validate();\n\n    if( validation === true ){\n\n      this.setState({\n        loading: true,\n      });\n\n      let response = await register( full_name, email, password);\n\n      if( response.success === true && response.metadata && response.metadata[0] && response.metadata[0]._id ){\n\n        response = await login( email, password);\n\n        if( response.success && response.metadata && response.metadata.authenticated === true ) {\n          window.location.reload();\n        } else {\n\n          this.setState({\n            error   : \"Erro ao tentar logar, pela pagina de login\",\n            loading : false,\n          })\n\n        }\n\n      } else {\n\n        let error = response.error\n                    ? response.error\n                    : \"Erro ao criar sua conta\"\n\n        this.setState({\n          error   : error,\n          loading : false,\n        })\n\n      }\n\n    } else {\n\n      this.setState({\n        error   : validation.error,\n        loading : false,\n      })\n      \n    }\n\n  }\n\n  render()\n  {\n\n    let { email,\n          password,\n          loading,\n          error,\n          full_name     } = this.state;\n\n    let { texts } = this.props;\n\n    return (\n      <div data-component=\"form-login\">\n\n        <form\n          data-form-type={  loading === true  ? \"loading\" : \"\"  }\n          onSubmit={this.handleSubmit}  >\n\n          <div data-header>\n            <i className=\"icon-map\"></i>\n            <h1>{texts.titleå}</h1>\n          </div>\n\n          <div data-field>\n            <i className=\"icon-smiley\"></i>\n            <input\n              type=\"text\"\n              value={full_name}\n              onChange={ ( e ) => { this.updateState( \"full_name\", e.target.value ) }}\n              placeholder={texts.form.full_name.placeholder}   />\n          </div>\n\n          <div data-field>\n            <i className=\"icon-mail\"></i>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={ ( e ) => { this.updateState( \"email\", e.target.value ) }}\n              placeholder={texts.form.email.placeholder}   />\n          </div>\n\n          <div data-field>\n            <i className=\"icon-key\"></i>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={ ( e ) => { this.updateState( \"password\", e.target.value ) }}\n              placeholder={texts.form.password.placeholder} />\n          </div>\n\n          {\n            error && error !== \"\"\n            ? (<p data-error>{error}</p>)\n            : \"\"\n          }\n\n          <button data-submit>\n            {texts.form.button_submit.text}\n          </button>\n\n          <Link to=\"/login\"><p data-link>{texts.link_login.text}</p></Link>\n        </form>\n\n      </div>\n    );\n\n  }\n\n}\n\nexport default FormRegister;\n"]},"metadata":{},"sourceType":"module"}