{"ast":null,"code":"import axios from 'axios';\nexport const isAuthenticated = async () => {\n  let auth_token = localStorage.getItem('auth_token');\n\n  if (auth_token && auth_token !== undefined && auth_token !== null && auth_token !== \"\") {\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n\n  let response = await axios.post('http://localhost:8080/auth', {\n    params: {\n      token: auth_token\n    }\n  });\n\n  if (response.data.success && response.data.metadata && response.data.metadata.authenticated === true) {\n    // alert( 'auth')\n    // localStorage.setItem('auth_token', );\n    return {\n      success: true,\n      metadata: {\n        authenticated: true\n      }\n    };\n  } else {\n    // Error\n    localStorage.removeItem('auth_token');\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    };\n  }\n};\nexport const login = () => {\n  return new Promise((resolve, reject) => {\n    axios.post('http://localhost:8080/auth?login=' + login + '&password=' + password).then(function (response) {\n      if (response.data.authenticated) {\n        localStorage.setItem('auth_token', response.data.token);\n        return resolve({\n          auth: true\n        });\n      } else {\n        localStorage.removeItem('auth_token');\n        return resolve({\n          auth: false,\n          message: 'Login ou senha invalidos'\n        });\n      }\n    });\n  });\n};\nexport const loggout = () => {};\nexport const register = () => {};","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/actions/authAction.js"],"names":["axios","isAuthenticated","auth_token","localStorage","getItem","undefined","success","metadata","authenticated","response","post","params","token","data","removeItem","login","Promise","resolve","reject","password","then","setItem","auth","message","loggout","register"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,YAAY;AAEzC,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AAEA,MAAIF,UAAU,IAAIA,UAAU,KAAKG,SAA7B,IAA0CH,UAAU,KAAK,IAAzD,IAAiEA,UAAU,KAAK,EAApF,EAAwF;AAEtF,WAAO;AACLI,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAOD;;AAED,MAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,4BAAX,EAAyC;AAC5DC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEV;AADD;AADoD,GAAzC,CAArB;;AAMA,MAAIO,QAAQ,CAACI,IAAT,CAAcP,OAAd,IAAyBG,QAAQ,CAACI,IAAT,CAAcN,QAAvC,IAAmDE,QAAQ,CAACI,IAAT,CAAcN,QAAd,CAAuBC,aAAvB,KAAyC,IAAhG,EAAsG;AAElG;AACA;AACA,WAAO;AACLF,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAOH,GAXD,MAWO;AACL;AACAL,IAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AACA,WAAO;AACLR,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,aAAa,EAAE;AADP;AAFL,KAAP;AAQD;AAGF,CA9CM;AAgDP,OAAO,MAAMO,KAAK,GAAG,MAAM;AAEzB,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEvClB,IAAAA,KAAK,CAACU,IAAN,CAAW,sCAAsCK,KAAtC,GAA8C,YAA9C,GAA4DI,QAAvE,EACMC,IADN,CACY,UAAUX,QAAV,EAAoB;AAEvB,UAAIA,QAAQ,CAACI,IAAT,CAAcL,aAAlB,EAAiC;AAE9BL,QAAAA,YAAY,CAACkB,OAAb,CAAqB,YAArB,EAAmCZ,QAAQ,CAACI,IAAT,CAAcD,KAAjD;AAEA,eAAOK,OAAO,CAAC;AACbK,UAAAA,IAAI,EAAE;AADO,SAAD,CAAd;AAIF,OARD,MAQO;AAEJnB,QAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AAEA,eAAOG,OAAO,CAAC;AACbK,UAAAA,IAAI,EAAE,KADO;AAEbC,UAAAA,OAAO,EAAE;AAFI,SAAD,CAAd;AAKF;AAEJ,KAtBN;AAwBD,GA1BM,CAAP;AA4BD,CA9BM;AA+BP,OAAO,MAAMC,OAAO,GAAG,MAAM,CAAE,CAAxB;AACP,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB","sourcesContent":["import axios from 'axios';\n\nexport const isAuthenticated = async () => {\n\n  let auth_token = localStorage.getItem('auth_token');\n\n  if( auth_token && auth_token !== undefined && auth_token !== null && auth_token !== \"\" ){\n\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n  }\n\n  let response = await axios.post('http://localhost:8080/auth', {\n    params: {\n      token: auth_token,\n    }\n  });\n\n  if( response.data.success && response.data.metadata && response.data.metadata.authenticated === true ){\n\n      // alert( 'auth')\n      // localStorage.setItem('auth_token', );\n      return {\n        success: true,\n        metadata: {\n          authenticated: true\n        }\n      }\n\n  } else {\n    // Error\n    localStorage.removeItem('auth_token');\n    return {\n      success: true,\n      metadata: {\n        authenticated: false\n      }\n    }\n\n\n  }\n\n\n}\n\nexport const login = () => {\n\n  return new Promise( (resolve, reject) => {\n\n    axios.post('http://localhost:8080/auth?login=' + login + '&password='+ password )\n         .then( function( response ){\n\n             if( response.data.authenticated ){\n\n                localStorage.setItem('auth_token', response.data.token );\n\n                return resolve({\n                  auth: true,\n                });\n\n             } else {\n\n                localStorage.removeItem('auth_token');\n\n                return resolve({\n                  auth: false,\n                  message: 'Login ou senha invalidos',\n                });\n\n             }\n\n         });\n\n  });\n\n}\nexport const loggout = () => {}\nexport const register = () => {}\n"]},"metadata":{},"sourceType":"module"}