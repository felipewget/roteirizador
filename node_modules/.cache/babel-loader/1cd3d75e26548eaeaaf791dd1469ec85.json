{"ast":null,"code":"var _jsxFileName = \"/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\n\nclass Map extends Component {\n  constructor(props) {\n    super();\n    let route = props.route;\n    this.state = {\n      directions: null,\n      route: route\n    };\n  }\n\n  componentDidMount() {\n    let route = this.state.route;\n    const directionsService = new window.google.maps.DirectionsService();\n    var origin,\n        destination = null;\n    var waypoints = [];\n    let count = 0;\n\n    for (let i in route) {\n      if (route[i].metadata && route[i].metadata.lat) {\n        // console.log(i)\n        // console.log(route[i])\n        if (count === 0) {\n          origin = {\n            lat: route[i].metadata.lat,\n            lng: route[i].metadata.lng\n          };\n        } else if (count === 1) {\n          destination = {\n            lat: route[i].metadata.lat,\n            lng: route[i].metadata.lng\n          };\n        } else {\n          waypoints.push({\n            location: route[i].metadata.lat + \",\" + route[i].metadata.lng,\n            stopover: true\n          });\n        }\n\n        count++;\n      }\n    }\n\n    console.log('--------------');\n    console.log('--------------');\n    console.log('--------------');\n    console.log(origin);\n    console.log(destination);\n    console.log(waypoints);\n    console.log('--------------');\n    console.log('--------------');\n    console.log('--------------');\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      optimizeWaypoints: true,\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n  }\n\n  render() {\n    let GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 40.756795,\n        lng: -73.954298\n      },\n      defaultZoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        \"data-google-map\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/fe.oliveira/Documents/Dev/React/roteirizador/src/components/Map/index.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Map","constructor","props","route","state","directions","componentDidMount","directionsService","window","google","maps","DirectionsService","origin","destination","waypoints","count","i","metadata","lat","lng","push","location","stopover","console","log","optimizeWaypoints","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","error","render","GoogleMapExample","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;;AAOA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAE1BM,EAAAA,WAAW,CAAEC,KAAF,EACX;AAEE;AAFF,QAIQC,KAJR,GAIkBD,KAJlB,CAIQC,KAJR;AAME,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXF,MAAAA,KAAK,EAAEA;AAFI,KAAb;AAKD;;AAEDG,EAAAA,iBAAiB,GAAG;AAAA,QAEZH,KAFY,GAEF,KAAKC,KAFH,CAEZD,KAFY;AAIlB,UAAMI,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,iBAAvB,EAA1B;AAEA,QAAIC,MAAJ;AAAA,QAAYC,WAAW,GAAG,IAA1B;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEA,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,CAAT,IAAcb,KAAd,EAAqB;AAEnB,UAAIA,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,IAAqBd,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBC,GAA3C,EAAgD;AAC9C;AACR;AACQ,YAAIH,KAAK,KAAK,CAAd,EAAiB;AACbH,UAAAA,MAAM,GAAG;AAAEM,YAAAA,GAAG,EAAEf,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBC,GAAzB;AAA8BC,YAAAA,GAAG,EAAEhB,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBE;AAArD,WAAT;AACH,SAFD,MAEO,IAAIJ,KAAK,KAAK,CAAd,EAAiB;AACpBF,UAAAA,WAAW,GAAG;AAAEK,YAAAA,GAAG,EAAEf,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBC,GAAzB;AAA8BC,YAAAA,GAAG,EAAEhB,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBE;AAArD,WAAd;AACH,SAFM,MAEA;AACHL,UAAAA,SAAS,CAACM,IAAV,CAAgB;AAAEC,YAAAA,QAAQ,EAAElB,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBC,GAAlB,GAAwB,GAAxB,GAA8Bf,KAAK,CAACa,CAAD,CAAL,CAASC,QAAT,CAAkBE,GAA5D;AAAiEG,YAAAA,QAAQ,EAAE;AAA3E,WAAhB;AACH;;AAEDP,QAAAA,KAAK;AAEN;AAEF;;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACJD,IAAAA,OAAO,CAACC,GAAR,CAAaZ,MAAb;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAaX,WAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAaV,SAAb;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb;AAEIjB,IAAAA,iBAAiB,CAACJ,KAAlB,CACE;AACES,MAAAA,MAAM,EAAEA,MADV;AAEEC,MAAAA,WAAW,EAAEA,WAFf;AAGEC,MAAAA,SAAS,EAAEA,SAHb;AAIEW,MAAAA,iBAAiB,EAAE,IAJrB;AAKEC,MAAAA,UAAU,EAAElB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBiB,UAAnB,CAA8BC;AAL5C,KADF,EAQE,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClB,UAAIA,MAAM,KAAKtB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBqB,gBAAnB,CAAoCC,EAAnD,EAAuD;AACrD,aAAKC,QAAL,CAAc;AACZ5B,UAAAA,UAAU,EAAEwB;AADA,SAAd;AAGD,OAJD,MAIO;AACLN,QAAAA,OAAO,CAACW,KAAR,qCAA2CL,MAA3C;AACD;AACF,KAhBH;AAmBD;;AAEDM,EAAAA,MAAM,GAAG;AAEP,QAAIC,gBAAgB,GAAGxC,aAAa,CAACM,KAAK,IACxC,oBAAC,SAAD;AACE,MAAA,aAAa,EAAE;AAAEgB,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OADjB;AAEE,MAAA,WAAW,EAAE,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,kBAAD;AACE,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADkC,CAApC;AAWA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,gBAAgB,EAAE;AAAK,+BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpB;AAEE,MAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAAEgC,UAAAA,MAAM;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AAlGyB;;AAqG5B,eAAerC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\n\nclass Map extends Component {\n\n  constructor( props )\n  {\n\n    super();\n\n    let { route } = props\n\n    this.state = {\n      directions: null,\n      route: route,\n    };\n\n  }\n\n  componentDidMount() {\n\n    let { route } = this.state;\n\n    const directionsService = new window.google.maps.DirectionsService();\n\n    var origin, destination = null;\n    var waypoints = [];\n\n    let count = 0;\n    for( let i in route ){\n\n      if( route[i].metadata && route[i].metadata.lat ){\n        // console.log(i)\n// console.log(route[i])\n        if( count === 0 ){\n            origin = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n        } else if( count === 1 ){\n            destination = { lat: route[i].metadata.lat, lng: route[i].metadata.lng }\n        } else {\n            waypoints.push( { location: route[i].metadata.lat + \",\" + route[i].metadata.lng, stopover: true } );\n        }\n\n        count++;\n\n      }\n\n    }\n\n    console.log( '--------------' )\n    console.log( '--------------' )\n    console.log( '--------------' )\nconsole.log( origin )\nconsole.log( destination )\nconsole.log( waypoints )\nconsole.log( '--------------' )\nconsole.log( '--------------' )\nconsole.log( '--------------' )\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: waypoints,\n        optimizeWaypoints: true,\n        travelMode: window.google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n\n  }\n\n  render() {\n\n    let GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <GoogleMapExample\n          containerElement={<div data-google-map />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}